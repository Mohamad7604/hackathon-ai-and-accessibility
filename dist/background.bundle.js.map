{"version":3,"file":"background.bundle.js","mappings":"AAKAA,OAAOC,QAAQC,YAAYC,aAAY,KACnCC,QAAQC,IAAI,iCAEZL,OAAOM,QAAQC,KAAKC,IAAI,CACpBC,WAAY,QACZC,cAAe,EACfC,WAAY,IACZC,MAAO,eAKfZ,OAAOC,QAAQY,UAAUV,aAAY,CAACW,EAASC,EAAQC,KACnD,GAAuB,iBAAnBF,EAAQG,OAA2B,CACnC,MAAMC,EAAiBJ,EAAQK,KAmB/B,OAjBAC,MAAM,oCAAqC,CACvCC,OAAQ,OACRC,QAAS,CACL,cAAiB,mFACjB,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEN,KAAMD,MAEhCQ,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFb,EAAa,CAAEc,eAAgBD,EAAKC,oBAEvCC,OAAMC,IACH5B,QAAQ4B,MAAM,0BAA2BA,GACzChB,EAAa,CAAEgB,MAAO,iCAGnB,CACX,CAGA,GAAuB,oBAAnBlB,EAAQG,OAA8B,CACtC,MAAMgB,EAAOnB,EAAQmB,KAiBrB,OAfAb,MAAM,qCAAqCa,gBAAoB,CAC3DZ,OAAQ,MACRC,QAAS,CACL,cAAiB,+DAGxBI,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACFb,EAAa,CAAEkB,WAAYL,EAAKM,iBAEnCJ,OAAMC,IACH5B,QAAQ4B,MAAM,6BAA8BA,GAC5ChB,EAAa,CAAEgB,MAAO,oCAGnB,CACX,CAEA,GAAqB,mBAAjBlB,EAAQsB,KAIR,OAHApC,OAAOM,QAAQC,KAAK8B,IAAI,MAAOC,IAC3BtB,EAAasB,OAEV","sources":["webpack://readable-browser-extension/./background.js"],"sourcesContent":["// This file contains the background service worker logic for handling API calls and managing extension events.\r\n\r\nconst DEEPSEEK_API_KEY = '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';\r\nconst WORDS_API_KEY = '49271852f8msh0708f6bec15a253p1d8d3fjsnc4272774025e';\r\n\r\nchrome.runtime.onInstalled.addListener(() => {\r\n    console.log('ReadAble extension installed.');\r\n\r\n    chrome.storage.sync.set({\r\n        fontFamily: 'Arial',\r\n        letterSpacing: 0,\r\n        lineHeight: 1.5,\r\n        theme: 'default'\r\n    });\r\n});\r\n\r\n// Handle API calls for text simplification\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    if (request.action === 'simplifyText') {\r\n        const textToSimplify = request.text;\r\n\r\n        fetch('https://api.deepseek.com/simplify', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${DEEPSEEK_API_KEY}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ text: textToSimplify })\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            sendResponse({ simplifiedText: data.simplifiedText });\r\n        })\r\n        .catch(error => {\r\n            console.error('Error simplifying text:', error);\r\n            sendResponse({ error: 'Failed to simplify text.' });\r\n        });\r\n\r\n        return true; // Keep the message channel open for sendResponse\r\n    }\r\n\r\n    // Handle vocabulary definitions\r\n    if (request.action === 'fetchDefinition') {\r\n        const word = request.word;\r\n\r\n        fetch(`https://wordsapi.com/api/v1/words/${word}/definitions`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${WORDS_API_KEY}`\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            sendResponse({ definition: data.definitions });\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching definition:', error);\r\n            sendResponse({ error: 'Failed to fetch definition.' });\r\n        });\r\n\r\n        return true; // Keep the message channel open for sendResponse\r\n    }\r\n\r\n    if (request.type === 'getPreferences') {\r\n        chrome.storage.sync.get(null, (items) => {\r\n            sendResponse(items);\r\n        });\r\n        return true;\r\n    }\r\n});"],"names":["chrome","runtime","onInstalled","addListener","console","log","storage","sync","set","fontFamily","letterSpacing","lineHeight","theme","onMessage","request","sender","sendResponse","action","textToSimplify","text","fetch","method","headers","body","JSON","stringify","then","response","json","data","simplifiedText","catch","error","word","definition","definitions","type","get","items"],"sourceRoot":""}