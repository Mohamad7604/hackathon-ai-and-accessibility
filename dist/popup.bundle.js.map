{"version":3,"file":"popup.bundle.js","mappings":"AAKAA,SAASC,iBAAiB,oBAAoB,KAE5C,MAAMC,EAAOF,SAASG,iBAAiB,QACjCC,EAAWJ,SAASG,iBAAiB,gBAE3CD,EAAKG,SAASC,IACZA,EAAIL,iBAAiB,SAAS,KAE5BC,EAAKG,SAASE,GAAMA,EAAEC,UAAUC,OAAO,YACvCL,EAASC,SAASK,GAAMA,EAAEF,UAAUC,OAAO,YAG3CH,EAAIE,UAAUG,IAAI,UAClBX,SACGY,eAAeN,EAAIO,aAAa,aAChCL,UAAUG,IAAI,gBAKrBX,SACGY,eAAe,mBACfX,iBAAiB,SAAS,KACzBa,OAAOZ,KAAKa,MACV,CAAEC,QAAQ,EAAMC,eAAe,IAC9Bf,IACMA,EAAK,IACVY,OAAOI,UAAUC,cAAc,CAC7BC,OAAQ,CAAEC,MAAOnB,EAAK,GAAGoB,IACzBC,MAAO,CAAC,wCAIdC,OAAOC,WAIXzB,SACGY,eAAe,iBACfX,iBAAiB,SAAS,KACzB,MASMyB,EAAc,CAClBC,WAVW3B,SAASY,eAAe,cAAcgB,MAWjDC,cAVoBC,WACpB9B,SAASY,eAAe,iBAAiBgB,OAUzCG,WARiBD,WACjB9B,SAASY,eAAe,cAAcgB,OAQtCI,MANYhC,SAASY,eAAe,SAASgB,OAU/Cd,OAAOmB,QAAQC,KAAKC,IAAIT,GAAa,KAEnCZ,OAAOZ,KAAKa,MACV,CAAEC,QAAQ,EAAMC,eAAe,IAC9Bf,IACMA,EAAK,IACVY,OAAOZ,KAAKkC,YACVlC,EAAK,GAAGoB,GACR,CACEe,KAAM,eACNC,SAAUZ,IAEZ,KAEEF,OAAOC,oBASrBzB,SAASY,eAAe,cAAcX,iBAAiB,SAAS,KAC9Da,OAAOZ,KAAKa,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAASf,IACnDA,EAAK,IACVY,OAAOI,UAAUC,cAAc,CAC7BC,OAAQ,CAAEC,MAAOnB,EAAK,GAAGoB,IACzBC,MAAO,CAAC,oCAGZC,OAAOC,WAITzB,SACGY,eAAe,qBACfX,iBAAiB,SAAS,KACzBa,OAAOZ,KAAKa,MACV,CAAEC,QAAQ,EAAMC,eAAe,IAC9Bf,IACMA,EAAK,IACVY,OAAOI,UAAUC,cAAc,CAC7BC,OAAQ,CAAEC,MAAOnB,EAAK,GAAGoB,IACzBC,MAAO,CAAC,wCAIdC,OAAOC","sources":["webpack://readable-browser-extension/./popup.js"],"sourcesContent":["// ──────────────────────────────────────────────────────────────────────────\r\n//   popup.js\r\n//   Handles tab switching and button clicks in the toolbar popup.\r\n// ──────────────────────────────────────────────────────────────────────────\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  // Tab switching\r\n  const tabs = document.querySelectorAll(\".tab\");\r\n  const contents = document.querySelectorAll(\".tab-content\");\r\n\r\n  tabs.forEach((tab) => {\r\n    tab.addEventListener(\"click\", () => {\r\n      // Deactivate all tabs/contents\r\n      tabs.forEach((t) => t.classList.remove(\"active\"));\r\n      contents.forEach((c) => c.classList.remove(\"active\"));\r\n\r\n      // Activate clicked tab & its content\r\n      tab.classList.add(\"active\");\r\n      document\r\n        .getElementById(tab.getAttribute(\"data-tab\"))\r\n        .classList.add(\"active\");\r\n    });\r\n  });\r\n\r\n  // ─── Simplify Button ───────────────────────────────\r\n  document\r\n    .getElementById(\"simplify-button\")\r\n    .addEventListener(\"click\", () => {\r\n      chrome.tabs.query(\r\n        { active: true, currentWindow: true },\r\n        (tabs) => {\r\n          if (!tabs[0]) return;\r\n          chrome.scripting.executeScript({\r\n            target: { tabId: tabs[0].id },\r\n            files: [\"dist/aiSimplification.bundle.js\"],\r\n          });\r\n        }\r\n      );\r\n      window.close();\r\n    });\r\n\r\n  // ─── Customize (Apply Settings) ────────────────────\r\n  document\r\n    .getElementById(\"save-settings\")\r\n    .addEventListener(\"click\", () => {\r\n      const font = document.getElementById(\"fontFamily\").value;\r\n      const letterSpacing = parseFloat(\r\n        document.getElementById(\"letterSpacing\").value\r\n      );\r\n      const lineHeight = parseFloat(\r\n        document.getElementById(\"lineHeight\").value\r\n      );\r\n      const theme = document.getElementById(\"theme\").value;\r\n\r\n      const newSettings = {\r\n        fontFamily: font,\r\n        letterSpacing: letterSpacing,\r\n        lineHeight: lineHeight,\r\n        theme: theme,\r\n      };\r\n\r\n      // Save to chrome.storage, then notify the page\r\n      chrome.storage.sync.set(newSettings, () => {\r\n        // Send a message to the active tab’s content script\r\n        chrome.tabs.query(\r\n          { active: true, currentWindow: true },\r\n          (tabs) => {\r\n            if (!tabs[0]) return;\r\n            chrome.tabs.sendMessage(\r\n              tabs[0].id,\r\n              {\r\n                type: \"updateStyles\",\r\n                settings: newSettings,\r\n              },\r\n              () => {\r\n                // close popup after applying\r\n                window.close();\r\n              }\r\n            );\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n  // ─── Text-to-Speech Button ────────────────────────\r\n  document.getElementById(\"tts-button\").addEventListener(\"click\", () => {\r\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n      if (!tabs[0]) return;\r\n      chrome.scripting.executeScript({\r\n        target: { tabId: tabs[0].id },\r\n        files: [\"dist/textToSpeech.bundle.js\"],\r\n      });\r\n    });\r\n    window.close();\r\n  });\r\n\r\n  // ─── Vocabulary Helper Button ─────────────────────\r\n  document\r\n    .getElementById(\"vocabulary-button\")\r\n    .addEventListener(\"click\", () => {\r\n      chrome.tabs.query(\r\n        { active: true, currentWindow: true },\r\n        (tabs) => {\r\n          if (!tabs[0]) return;\r\n          chrome.scripting.executeScript({\r\n            target: { tabId: tabs[0].id },\r\n            files: [\"dist/vocabularyHelper.bundle.js\"],\r\n          });\r\n        }\r\n      );\r\n      window.close();\r\n    });\r\n});\r\n"],"names":["document","addEventListener","tabs","querySelectorAll","contents","forEach","tab","t","classList","remove","c","add","getElementById","getAttribute","chrome","query","active","currentWindow","scripting","executeScript","target","tabId","id","files","window","close","newSettings","fontFamily","value","letterSpacing","parseFloat","lineHeight","theme","storage","sync","set","sendMessage","type","settings"],"sourceRoot":""}